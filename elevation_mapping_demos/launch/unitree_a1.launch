<?xml version="1.0" encoding="utf-8"?>

<launch>

  <!-- Load robot_description param for tf, rviz  -->
<!--  <param name="robot_description" command="$(find xacro)/xacro $(find a1_description)/xacro/robot.xacro DEBUG:=false"/>-->


  <!-- Run a passthrough filter to down-sample the sensor point cloud.-->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/raisim_unitree_ros_driver/points"/>
    <remap from="~output" to="/points_downsampled"/>
    <rosparam>
      filter_field_name: z
      filter_limit_min: -1.0
      filter_limit_max: 1.0  <!-- Limit the range of points to forward to 2 meters in viewing direction-->
      filter_limit_negative: False
      leaf_size: 0.02  <!-- Limit the density to 5 cm-->
    </rosparam>
  </node>

  <!-- Publish tf 'base_footprint' as pose.-->
  <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="unitree_pose_publisher">
    <param name="from_frame" type="string" value="odom"/>
    <param name="to_frame" type="string" value="base"/>
  </node>

  <!-- Launch elevation mapping node. -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/robots/unitree_a1.yaml"/>
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/postprocessing/postprocessor_pipeline.yaml"/>
  </node>

  <!-- Launch RViz with the demo configuration. -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find elevation_mapping_demos)/rviz/turtlebot3_waffle_demo.rviz"/>

</launch>
